/*############################################################################################################
# File: c:\PX_WIN_UI\projectX_WIN_GUI\App.cpp                                                                #
# Project: c:\PX_WIN_UI\projectX_WIN_GUI                                                                     #
# Created Date: Tuesday, September 14th 2021, 6:12:11 pm                                                     #
# Author: Leonexxe (Leon Marcellus Nitschke-Höfer)                                                           #
# -----                                                                                                      #
# Copyright (c) 2021 Leon Marcellus Nitschke-Höfer (Leonexxe)                                                #
# -----                                                                                                      #
# You may not remove or alter this copyright header.                                                         #
############################################################################################################*/
#pragma once
#include "include.h"
/*
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ██      ███████  █████  ██    ██ ███████     ████████ ██   ██ ██ ███████      █████  ██       ██████  ███    ██ ███████ 
? ██      ██      ██   ██ ██    ██ ██             ██    ██   ██ ██ ██          ██   ██ ██      ██    ██ ████   ██ ██      
? ██      █████   ███████ ██    ██ █████          ██    ███████ ██ ███████     ███████ ██      ██    ██ ██ ██  ██ █████   
? ██      ██      ██   ██  ██  ██  ██             ██    ██   ██ ██      ██     ██   ██ ██      ██    ██ ██  ██ ██ ██      
? ███████ ███████ ██   ██   ████   ███████        ██    ██   ██ ██ ███████     ██   ██ ███████  ██████  ██   ████ ███████ 
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
?       no 4real do yourself a favor and just don't touch any of the following code, you wont have a good time        
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
*/




//?############################?//
//?#                          #?//
//?#       net functions      #?//
//?#                          #?//
//?############################?//
std::string str_toCLI = "";
std::string str_fromCLI = "";
std::string cli(std::string s)
{
    str_toCLI = s;
    while(str_fromCLI == ""){Sleep(0xA);}
    std::string RETURN = str_fromCLI;
    str_fromCLI = "";
    return RETURN;
}
std::string toCLI(std::string* s, px::connection* conn)
{
    str_fromCLI = *s;
    log(px::InfoPrefix()+"CLI: "+str_fromCLI);
    while(str_toCLI == ""){Sleep(0xA);};
    std::string temp = str_toCLI;
    str_toCLI = "";
    log(px::InfoPrefix()+"toCLI: "+temp);
    return temp;
}

std::string fromCLI(std::string* s, px::connection* conn)
{
    log(px::InfoPrefix()+"CLI: "+*s);
    if(*s == "001")
        EXIT();//?exit
    return "000";
}
px::connection conn_toCLI(px::addr("127.0.0.1",6001),&toCLI,"001");
px::connection conn_fromCLI(px::addr("127.0.0.1",6001),&fromCLI,"000");

void THRtc(){conn_toCLI._connect();}
void THRfc(){conn_fromCLI._connect();}
std::thread THR_TC(&THRtc);
std::thread THR_FC(&THRfc);

/*
~ ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
~ ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
~ ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
~               ███████ ███    ██ ████████ ██████  ██    ██     ██████   ██████  ██ ███    ██ ████████ 
~               ██      ████   ██    ██    ██   ██  ██  ██      ██   ██ ██    ██ ██ ████   ██    ██    
~               █████   ██ ██  ██    ██    ██████    ████       ██████  ██    ██ ██ ██ ██  ██    ██    
~               ██      ██  ██ ██    ██    ██   ██    ██        ██      ██    ██ ██ ██  ██ ██    ██    
~               ███████ ██   ████    ██    ██   ██    ██        ██       ██████  ██ ██   ████    ██    
~ ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
~ ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
~ ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
*/

std::list<std::string> list_LOG;
void log(std::string s)
{
    list_LOG.push_back(s);
}

void EXIT()
{
}

//~############################~//
//~#                          #~//
//~#           main           #~//
//~#                          #~//
//~############################~//
#include "ENTRY_POINT.cpp"
bool fireMainTHR = 0;
void mainTHR()//! this is your entrypoint
{
    while(!fireMainTHR){Sleep(0xA);}
    //~fire
    ENTRY_POINT();
}


/*
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ██      ███████  █████  ██    ██ ███████     ████████ ██   ██ ██ ███████      █████  ██       ██████  ███    ██ ███████ 
? ██      ██      ██   ██ ██    ██ ██             ██    ██   ██ ██ ██          ██   ██ ██      ██    ██ ████   ██ ██      
? ██      █████   ███████ ██    ██ █████          ██    ███████ ██ ███████     ███████ ██      ██    ██ ██ ██  ██ █████   
? ██      ██      ██   ██  ██  ██  ██             ██    ██   ██ ██      ██     ██   ██ ██      ██    ██ ██  ██ ██ ██      
? ███████ ███████ ██   ██   ████   ███████        ██    ██   ██ ██ ███████     ██   ██ ███████  ██████  ██   ████ ███████ 
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
?       no 4real do yourself a favor and just don't touch any of the following code, you wont have a good time        
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
? ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
*/
//!############################!//
//!#                          #!//
//!#     init and log BS      #!//
//!#                          #!//
//!############################!//

void logTHRf()
{
    while(1)
    {
        Sleep(0xA);
        for(std::string I : list_LOG)
            UI_FRAME->m_console->AppendString(I);
        list_LOG.clear();
    }
}

std::thread mTHR(&mainTHR);
std::thread logTHR(&logTHRf);

void _app()
{
    #ifdef PX_WIN
        //tell windows not to display stupid error boxes for stupid runtime errors
        _set_abort_behavior(0, _WRITE_ABORT_MSG);
    #endif
    log(px::InfoPrefix() + "starting client...");
    log(px::InfoPrefix() + "fetching data from CLI...");
    while(str_fromCLI != "OK"){Sleep(0xA);}
    log(px::InfoPrefix() + "got OK from CLI... \""+str_fromCLI+"\"");
    str_fromCLI = "";
    fireMainTHR = 0x1;
}